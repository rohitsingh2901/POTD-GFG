Count possible ways to construct buildings

There is a road passing through a city with N plots on both sides of the road. Plots are arranged in a straight line on either side of the road. Determine the total number of ways to construct buildings in these plots, ensuring that no two buildings are adjacent to each other. Specifically, buildings on opposite sides of the road cannot be adjacent.

Using * to represent a plot and || for the road, the arrangement for N = 3 can be visualized as follows: * * * || * * *.

Note: As the answer can be very large, print it mod 109+7.

Example 1:

Input: N = 1
Output: 4
Explanation: 
Possible ways for the arrangement are B||*, *||B, B||B, *||*
where B represents a building.
Example 2:

Input: N = 3
Output: 25
Explanation: 
Possible ways for one side are BSS, BSB, SSS, SBS,
SSB where B represents a building and S
represents an empty space. Pairing up with 
possibilities on the other side of the road,
total possible ways are 25.
Your Task:
You don't need to read or print anything. Your task is to complete the function TotalWays() which takes N as input parameter and returns the total possible ways modulo 109 + 7.
 

Expected Time Complexity: O(N)
Expected Space Complexity: O(N)
 

Constraints:
1 <= N <= 100000


Explanation:

(The problem is same as finding the number of binary string with no adjacent element as 1 ) * 2

1. Initialization: The function `TotalWays` takes an integer `N` as input representing the number of plots on one side of the road. It initializes two vectors `one` and `zero` with sizes `(N+1)` to store the counts of possibilities where a building is placed (`one`) or skipped (`zero`). It also defines a constant `MOD` to be used for taking the modulus.

2. Base Cases: The initial values for `one[1]` and `zero[1]` are set to 1, representing the base cases where there is only one plot available.

3. Calculating possibilities for one side of the road:
   - The loop iterates from 2 to `N` and calculates the counts of possibilities for both `one` and `zero` vectors.
   - `zero[i]` represents the count of possibilities when a building is not placed on the `i-th` plot.
   - `one[i]` represents the count of possibilities when a building is placed on the `i-th` plot. This value is based on the count of possibilities from the previous position where a building was not placed (`zero[i-1]`).

4. Total ways for both sides:
   - The count of possibilities for one side (`zero[N]` + `one[N]`) is summed up.
   - Then, this count is squared (`ans * ans`) to account for both sides of the road without adjacency.
   - Finally, the modulo operation `ans % MOD` is applied to keep the answer within the limits defined by the problem.
